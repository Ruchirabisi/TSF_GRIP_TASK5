# -*- coding: utf-8 -*-
"""TASK5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q8ZEb3p0LIG38E3bET-GVsugCqquB850

# GRIP (THE SPARKS FOUNDATION)
TASK 5: **BUSINESS ANALYTICS**

# Uploading the data
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
# %matplotlib inline

# Import PyDrive and associated libraries.
# This only needs to be done once per notebook.
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

# Authenticate and create the PyDrive client.
# This only needs to be done once per notebook.
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)
downloaded = drive.CreateFile({'id':'1lV7is1B566UQPYzzY8R2ZmOritTW299S'}) # replace the id with id of file you want to access
downloaded.GetContentFile('SampleSuperstore.csv')
store = pd.read_csv('SampleSuperstore.csv')

store.head()

store.tail()

store.dtypes

store=store.drop(['Discount','Postal Code'], axis=1)
store.head()

store.describe()

store.isnull().sum()

store.shape

store['Category'].unique()

"""#Checking Outliers"""

sns.boxplot(store.Sales)

sns.distplot(store.Sales, kde=True)

max(store.Sales)

"""#Removing Outliers"""

x=store[store['Sales']< 250.000]

sns.distplot(x.Sales, kde=True)

sns.boxplot(x.Sales)

x.head()

"""#VISUALIZING"""

fig= x.groupby('Ship Mode').sum().reset_index()
sns.barplot(x='Ship Mode', y='Profit', data=x, palette='winter')

fig= x.groupby('Ship Mode').sum().reset_index()
sns.barplot(x='Ship Mode', y='Sales', data=fig, palette='magma')

fig= x.groupby('Region').sum().reset_index()
sns.barplot(x='Region', y='Sales', data=fig)

fig1= x.groupby(['Region','Category']).sum().reset_index()
sns.barplot(x='Region', y='Quantity', hue='Category', data=fig1, palette='winter')

plt.figure(figsize=(20,20))
fig= x.groupby('State').sum().reset_index()
sns.barplot(x='Sales', y='State', data=fig)
sns.set_style('whitegrid')

fig= x.groupby('State').sum().reset_index()
plt.figure(figsize=(15,15))
sns.barplot(x='Profit', y='State',data=x)

grouped1 = x.groupby('Category').sum().reset_index()
sns.barplot(x='Category',y='Sales', data=grouped1, palette='winter')

sns.countplot(x='Segment',hue='Region',data=x, palette='magma')

grouped = x.groupby('City').sum().reset_index()
grouped.sort_values('Sales', ascending=False).head(10)

"""Top 10 subcategory vs quantity"""

grouped1 = x.groupby('Sub-Category').sum().reset_index()
z=grouped1.sort_values('Sales', ascending=False).head(10)
plt.figure(figsize=(16,5))
sns.barplot(x='Sub-Category', y='Quantity',data=z, palette='magma')

z=store[store['Profit']< 0]
z=z.groupby('Ship Mode').sum().reset_index()
sns.barplot(x='Ship Mode', y='Discount', data=z, palette='magma')